#reader(lib"read.ss""wxme")WXME0109 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.8 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(0
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(1
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(2
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(3
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 60 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 192 46 214 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 57 89 216 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 157 157 250 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 249 148 40 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
37 #"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 51 174 51 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 140 212 140 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 151 69 43 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
36 #"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
16 #"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 163 255 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
28 #"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
37 #"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
36 #"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 166 0 255 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 192 203 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 50 205 50 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 240 230 140 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 255 255 0 0 0 -1 -1 2
38 #"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 205 92 92 0 0 0 -1 -1 0 36
#"mrlib/syntax-browser:subtitle-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 100 149 237 255 255 255 -1
-1 0 42 #"mrlib/syntax-browser:focused-syntax-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 50 205 50 255 255 255 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 191 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 152 251 152 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 200 0 0 0 0 0 -1 -1 4 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 255 255 0 -1 -1
          0 1011 0 25 3 1 #"("
0 0 15 3 6 #"module"
0 0 25 3 1 #" "
0 0 14 3 8 #"project1"
0 0 25 3 1 #" "
0 0 14 3 8 #"mzscheme"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 48 #";;;;;;;;;;;; Comp 301 Project 1 ;;;;;;;;;;;;;;;;"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 27 #";;; Add group members below"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 47 #";;; Alpay Sabuncuo\304\237lu, asabuncuoglu13, 0011221"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 46
#";;; G\303\274l Sena Alt\304\261nta\305\237, galtintas17, 0011222"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 84
(4
 #";;; save your file in the format: p1_0011221_asabuncuoglu13_00112222"
 #"_galtintas17.rkt"
) 0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 49 #";;;;;;;;;;;;;;;;;;; PROBLEMS ;;;;;;;;;;;;;;;;;;;;"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 63
#";; PROJECT 1 Part A | Write your answer below here as a comment"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 2 #";;"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 139
(5
 #";;We are going to represent colors with given parameters R, G, B. We"
 #" define two data representation such as hexadecimal and RGB color li"
 #"st."
) 0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 2 #";;"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 61
#";;The grammar of  data representation hexadecimal as follows:"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 50 #";;We can define the representation inductively by:"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 47 #";;; <color>   ::= <color> <color> | <chexdigit>"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 71
(6
 #";;; <chexdigit> ::= () | (cdigit.cidigit.cdigit.cidigit.cdigit.cidig"
 #"it)"
) 0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 79
(7
 #";;; <cdigit>  ::= 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | A | B | C "
 #"| D | E | F"
) 0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 3 #";;;"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 3 #";;;"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 64
#";;The grammar of  data representation RGB Color list as follows:"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 50 #";;We can define the representation inductively by:"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 45 #";;; <color>   ::= <color> <color> | <RGBlist>"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 45 #";;; <RGBlist> ::= () | (RGBnum.RGBnum.RGBnum)"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 42 #";;; <RGBnum>  ::= 0 | 1 | 2 | 3 .... | 255"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 53 #";Second representation is ordered box representation:"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 2 #";;"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 2 #";;"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 19 #";; PROJECT 1 Part B"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 112
(8
 #";; First Representation | We added a suffix so that both first and s"
 #"econd representations can be tested at once."
) 0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 16 #"create-hex-color"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"R"
0 0 25 3 1 #" "
0 0 14 3 1 #"G"
0 0 25 3 1 #" "
0 0 14 3 1 #"B"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 3 #"sad"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 18 #"is-zero-hex-color?"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"    ())"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 17 3 48 #"; Successor increments each R, G, B values by 1."
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 19 #"successor-hex-color"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"    ())"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 100
(9
 #";; Second Representation | We added a -b suffix so that both Unary a"
 #"nd BigNum can be tested at once."
) 0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 37 #"; Creates an rgb-color representation"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 16 #"create-rgb-color"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 1 #"R"
0 0 25 3 1 #" "
0 0 14 3 1 #"G"
0 0 25 3 1 #" "
0 0 14 3 1 #"B"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 4 #"list"
0 0 25 3 1 #" "
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 17 #"normalize-rgb-num"
0 0 25 3 1 #" "
0 0 14 3 1 #"R"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 17 #"normalize-rgb-num"
0 0 25 3 1 #" "
0 0 14 3 1 #"G"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 17 #"normalize-rgb-num"
0 0 25 3 1 #" "
0 0 14 3 1 #"B"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      )"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"    ))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 44 #"; Check wheter given color is all zero/black"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 18 #"is-zero-rgb-color?"
0 0 25 29 1 #"\n"
0 0 25 3 6 #"     ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 9 #"rgb-color"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"         (("
0 0 14 3 5 #"null?"
0 0 25 3 1 #" "
0 0 14 3 9 #"rgb-color"
0 0 25 3 2 #") "
0 0 22 3 2 #"#t"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 11 #"         (("
0 0 14 3 1 #"="
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 9 #"rgb-color"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 3 #") ("
0 0 14 3 18 #"is-zero-rgb-color?"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 9 #"rgb-color"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        )"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"       ))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 48 #"; Successor increments each R, G, B values by 1."
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 19 #"successor-rgb-color"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 9 #"rgb-color"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 18 #"is-zero-rgb-color?"
0 0 25 3 1 #" "
0 0 14 3 9 #"rgb-color"
0 0 25 3 3 #") ("
0 0 14 3 26 #"successor-rgb-color-helper"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"r"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 25 3 2 #" ("
0 0 14 3 26 #"successor-rgb-color-helper"
0 0 25 3 1 #" "
0 0 14 3 9 #"rgb-color"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"r"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        )"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      ))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 46 #"; Helper function to increment values by color"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 26 #"successor-rgb-color-helper"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 9 #"rgb-color"
0 0 25 3 1 #" "
0 0 14 3 5 #"color"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 5 #"color"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"r"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 17 #"successor-rgb-num"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 9 #"rgb-color"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 26 #"successor-rgb-color-helper"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 9 #"rgb-color"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"g"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 5 #"color"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"g"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 17 #"successor-rgb-num"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 9 #"rgb-color"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 16 #"               ("
0 0 14 3 26 #"successor-rgb-color-helper"
0 0 25 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 25 3 1 #" "
0 0 14 3 9 #"rgb-color"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 14 3 1 #"b"
0 0 25 3 3 #")))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 5 #"color"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 1 #"b"
0 0 25 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 25 3 2 #" ("
0 0 14 3 17 #"successor-rgb-num"
0 0 25 3 2 #" ("
0 0 14 3 3 #"car"
0 0 25 3 1 #" "
0 0 14 3 9 #"rgb-color"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 22 3 2 #"#f"
0 0 25 3 2 #") "
0 0 17 3 13 #"; throw error"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        )"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      ))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 45 #"; Successor of rgb-num, increment value by 1."
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 17 #"successor-rgb-num"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 7 #"rgb-num"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 1 #"="
0 0 25 3 1 #" "
0 0 14 3 7 #"rgb-num"
0 0 25 3 1 #" "
0 0 22 3 3 #"255"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 19 #"is-in-rgb-num-range"
0 0 25 3 1 #" "
0 0 14 3 7 #"rgb-num"
0 0 25 3 3 #") ("
0 0 14 3 1 #"+"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 14 3 7 #"rgb-num"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        ("
0 0 14 3 4 #"else"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        )"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      ))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 56 #"; Helper function to check if rgb-num in range of 0..255"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 19 #"is-in-rgb-num-range"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 3 #"lam"
0 0 15 3 3 #"bda"
0 0 25 3 2 #" ("
0 0 14 3 7 #"rgb-num"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 14 3 3 #"and"
0 0 25 3 2 #" ("
0 0 14 3 2 #"<="
0 0 25 3 1 #" "
0 0 14 3 7 #"rgb-num"
0 0 25 3 1 #" "
0 0 22 3 3 #"255"
0 0 25 3 3 #") ("
0 0 14 3 2 #">="
0 0 25 3 1 #" "
0 0 14 3 7 #"rgb-num"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      ))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 42 #"; Helper function to keep rgb-num in range"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 25 3 1 #" "
0 0 14 3 17 #"normalize-rgb-num"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 6 #"lambda"
0 0 25 3 2 #" ("
0 0 14 3 7 #"rgb-num"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 7 #"      ("
0 0 15 3 4 #"cond"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 19 #"is-in-rgb-num-range"
0 0 25 3 1 #" "
0 0 14 3 7 #"rgb-num"
0 0 25 3 2 #") "
0 0 14 3 7 #"rgb-num"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 1 #">"
0 0 25 3 1 #" "
0 0 14 3 7 #"rgb-num"
0 0 25 3 1 #" "
0 0 22 3 3 #"255"
0 0 25 3 2 #") "
0 0 22 3 3 #"255"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"        (("
0 0 14 3 1 #"<"
0 0 25 3 1 #" "
0 0 14 3 7 #"rgb-num"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 1 #"0"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 9 #"        )"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      ))"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 63
#";; PROJECT 1 Part C | Write your answer below here as a comment"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 219
(10
 #";Constructors: Creates an instance of the datatype; the constructor "
 #"takes as many arguments as the variant\342\200\231s field-ids, and e"
 #"ach argument is checked by applying the function produced by the var"
 #"iant\342\200\231s predicate-expr."
) 0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 96
(11
 #";create-rgb-color, create-hex-color, successor-rgb-color, successor-"
 #"hex-color, successor-rgb-num"
) 0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 27 #";Observers: Extracts/Checks"
0 0 17 3 84
(12
 #" information from values of the data type. Has two kinds: predicates"
 #" and extractors."
) 0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 39 #";is-zero-hex-color?, is-zero-rgb-color?"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 101
(13
 #";Extractors: Extractors report an error if an expressed value is not"
 #" of the expected kind and returns"
) 0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 10 #"; it if it"
0 0 17 3 1 #"'"
0 0 17 3 1 #"s"
0 0 17 3 18 #" of expected kind."
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 82
(14
 #";Predicates: Predicates takes information and returns boolean about "
 #"the situation."
) 0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 39 #";is-zero-hex-color?, is-zero-rgb-color?"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 1 #";"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 50 #";;;;;;;;;;;;;;;;;;; TESTS ;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 129
(15
 #";;; Don't worry about the below function, we included it to test you"
 #"r implemented functions and display the result in the console"
) 0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 112
(16
 #";; As you implement your functions you can Run (the button on the to"
 #"p right corner) to test your implementations"
) 0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 15 3 13 #"define-syntax"
0 0 25 3 1 #" "
0 0 14 3 7 #"equal??"
0 0 25 29 1 #"\n"
0 0 25 3 5 #"    ("
0 0 15 3 12 #"syntax-rules"
0 0 25 3 3 #" ()"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"      (("
0 0 14 3 1 #"_"
0 0 25 3 1 #" "
0 0 14 3 8 #"test-exp"
0 0 25 3 1 #" "
0 0 14 3 11 #"correct-ans"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 25 3 3 #" (("
0 0 14 3 12 #"observed-ans"
0 0 25 3 1 #" "
0 0 14 3 8 #"test-exp"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 10 #"         ("
0 0 14 3 2 #"if"
0 0 25 3 2 #" ("
0 0 14 3 3 #"not"
0 0 25 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 25 3 1 #" "
0 0 14 3 12 #"observed-ans"
0 0 25 3 1 #" "
0 0 14 3 11 #"correct-ans"
0 0 25 3 2 #"))"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 6 #"printf"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"Oops!"
0 0 19 3 1 #" "
0 0 19 3 2 #"~s"
0 0 19 3 1 #" "
0 0 19 3 8 #"returned"
0 0 19 3 1 #" "
0 0 19 3 2 #"~s"
0 0 19 3 1 #","
0 0 19 3 1 #" "
0 0 19 3 6 #"should"
0 0 19 3 1 #" "
0 0 19 3 4 #"have"
0 0 19 3 1 #" "
0 0 19 3 8 #"returned"
0 0 19 3 5 #" ~s~%"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 8 #"test-exp"
0 0 25 3 1 #" "
0 0 14 3 12 #"observed-ans"
0 0 25 3 1 #" "
0 0 14 3 11 #"correct-ans"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 12 #"           ("
0 0 14 3 6 #"printf"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 8 #"Correct!"
0 0 19 3 1 #" "
0 0 19 3 2 #"~s"
0 0 19 3 1 #" "
0 0 19 3 2 #"=>"
0 0 19 3 5 #" ~s~%"
0 0 19 3 1 #"\""
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 14 3 8 #"test-exp"
0 0 25 3 1 #" "
0 0 14 3 11 #"correct-ans"
0 0 25 3 6 #"))))))"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 63
#";; PROJECT 1 Part D | Remove the comments and write test cases."
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 5 #"First"
0 0 19 3 1 #" "
0 0 19 3 14 #"Representation"
0 0 19 3 8 #" Tests\\n"
0 0 19 3 1 #"\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 44 #";(equal?? (create-a ) '()) ; should return ?"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 49 #";(equal?? (is-zero-a? '()) #f) ; should return #f"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 49 #";(equal?? (is-zero-a? '()) #t) ; should return #t"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 17 3 50 #";(equal?? (successor-a '()) '()) ; should return ?"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"newline"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 29 1 #"\n"
0 0 25 3 2 #"  "
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"display"
0 0 25 3 1 #" "
0 0 19 3 1 #"\""
0 0 19 3 6 #"Second"
0 0 19 3 1 #" "
0 0 19 3 14 #"Representation"
0 0 19 3 1 #" "
0 0 19 3 8 #"Tests\\n\""
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"equal??"
0 0 25 3 2 #" ("
0 0 14 3 16 #"create-rgb-color"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")) "
0 0 17 3 24 #"; should return '(0 0 0)"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"equal??"
0 0 25 3 2 #" ("
0 0 14 3 16 #"create-rgb-color"
0 0 25 3 1 #" "
0 0 22 3 2 #"99"
0 0 25 3 1 #" "
0 0 22 3 2 #"99"
0 0 25 3 1 #" "
0 0 22 3 2 #"99"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 2 #"99"
0 0 25 3 1 #" "
0 0 22 3 2 #"99"
0 0 25 3 1 #" "
0 0 22 3 2 #"99"
0 0 25 3 3 #")) "
0 0 17 3 27 #"; should return '(99 99 99)"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"equal??"
0 0 25 3 2 #" ("
0 0 14 3 16 #"create-rgb-color"
0 0 25 3 1 #" "
0 0 22 3 3 #"255"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 1 #" "
0 0 22 3 3 #"155"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 3 #"255"
0 0 25 3 1 #" "
0 0 22 3 3 #"200"
0 0 25 3 1 #" "
0 0 22 3 3 #"155"
0 0 25 3 3 #")) "
0 0 17 3 30 #"; should return '(255 200 155)"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"equal??"
0 0 25 3 2 #" ("
0 0 14 3 16 #"create-rgb-color"
0 0 25 3 1 #" "
0 0 22 3 3 #"265"
0 0 25 3 1 #" "
0 0 22 3 3 #"265"
0 0 25 3 1 #" "
0 0 22 3 3 #"265"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 3 #"255"
0 0 25 3 1 #" "
0 0 22 3 3 #"255"
0 0 25 3 1 #" "
0 0 22 3 3 #"255"
0 0 25 3 3 #")) "
0 0 17 3 30 #"; should return '(255 255 255)"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"equal??"
0 0 25 3 2 #" ("
0 0 14 3 16 #"create-rgb-color"
0 0 25 3 1 #" "
0 0 22 3 4 #"-265"
0 0 25 3 1 #" "
0 0 22 3 3 #"265"
0 0 25 3 1 #" "
0 0 22 3 3 #"244"
0 0 25 3 2 #") "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 3 #"255"
0 0 25 3 1 #" "
0 0 22 3 3 #"244"
0 0 25 3 3 #")) "
0 0 17 3 30 #"; should return '(255 255 255)"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"equal??"
0 0 25 3 2 #" ("
0 0 14 3 18 #"is-zero-rgb-color?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()) "
0 0 22 3 2 #"#t"
0 0 25 3 2 #") "
0 0 17 3 18 #"; should return #t"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"equal??"
0 0 25 3 2 #" ("
0 0 14 3 18 #"is-zero-rgb-color?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#t"
0 0 25 3 2 #") "
0 0 17 3 18 #"; should return #t"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"equal??"
0 0 25 3 2 #" ("
0 0 14 3 18 #"is-zero-rgb-color?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#t"
0 0 25 3 2 #") "
0 0 17 3 18 #"; should return #t"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"equal??"
0 0 25 3 2 #" ("
0 0 14 3 18 #"is-zero-rgb-color?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 2 #") "
0 0 17 3 18 #"; should return #f"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"equal??"
0 0 25 3 2 #" ("
0 0 14 3 18 #"is-zero-rgb-color?"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")) "
0 0 22 3 2 #"#f"
0 0 25 3 2 #") "
0 0 17 3 18 #"; should return #f"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"equal??"
0 0 25 3 2 #" ("
0 0 14 3 19 #"successor-rgb-color"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 4 #"()) "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 17 3 24 #"; should return '(1 1 1)"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"equal??"
0 0 25 3 2 #" ("
0 0 14 3 19 #"successor-rgb-color"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 1 #" "
0 0 22 3 1 #"1"
0 0 25 3 3 #")) "
0 0 17 3 24 #"; should return '(1 1 1)"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"equal??"
0 0 25 3 2 #" ("
0 0 14 3 19 #"successor-rgb-color"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 1 #" "
0 0 22 3 2 #"10"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 1 #" "
0 0 22 3 2 #"11"
0 0 25 3 3 #")) "
0 0 17 3 27 #"; should return '(11 11 11)"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"equal??"
0 0 25 3 2 #" ("
0 0 14 3 19 #"successor-rgb-color"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 3 #"254"
0 0 25 3 1 #" "
0 0 22 3 3 #"254"
0 0 25 3 1 #" "
0 0 22 3 3 #"254"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 3 #"255"
0 0 25 3 1 #" "
0 0 22 3 3 #"255"
0 0 25 3 1 #" "
0 0 22 3 3 #"255"
0 0 25 3 3 #")) "
0 0 17 3 30 #"; should return '(255 255 255)"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"equal??"
0 0 25 3 2 #" ("
0 0 14 3 19 #"successor-rgb-color"
0 0 25 3 1 #" "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 3 #"255"
0 0 25 3 1 #" "
0 0 22 3 3 #"255"
0 0 25 3 1 #" "
0 0 22 3 3 #"255"
0 0 25 3 3 #")) "
0 0 22 3 1 #"'"
0 0 25 3 1 #"("
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 1 #" "
0 0 22 3 1 #"0"
0 0 25 3 3 #")) "
0 0 17 3 24 #"; should return '(0 0 0)"
0 0 25 29 1 #"\n"
0 0 25 3 3 #"  ("
0 0 14 3 7 #"newline"
0 0 25 3 1 #")"
0 0 25 29 1 #"\n"
0 0 25 3 1 #")"
0           0
